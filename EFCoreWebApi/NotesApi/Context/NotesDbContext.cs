using Microsoft.EntityFrameworkCore;
using NotesApi.Models;

namespace NotesApi.Context;

public class NotesDbContext : DbContext, INotesDbContext
{
    private readonly ILoggerFactory logger;

    public NotesDbContext(DbContextOptions<NotesDbContext> options, ILoggerFactory logger) : base(options)
    {
        this.logger = logger;
    }

    /// <summary>
    /// for logging the SQL queries generated by EF.
    /// </summary>
    /// <param name="optionsBuilder"></param>
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder.UseLoggerFactory(logger)
            .EnableSensitiveDataLogging();

        base.OnConfiguring(optionsBuilder);
    }
    public DbSet<TokenModel> Tokens { get; set; } = null;
    public DbSet<UsersModel> Users { get; set; } = null;
    public DbSet<NoteModel> Notes { get; set; } = null;

    public async Task SaveChangesAsync()
    {
        await base.SaveChangesAsync();
    }
}
