using Microsoft.EntityFrameworkCore;
using Microsoft.OpenApi.Models;
using NotesApi.Context;
using NotesApi.Filters;

namespace NotesApi;

public class Program
{
    public static void Main(string[] args)
    {
        var builder = WebApplication.CreateBuilder(args);

        // to log the query generated by the EF Core.
        var loggerFactory = LoggerFactory.Create(builder =>
        {
            builder.AddFilter((category, level) =>
                category == DbLoggerCategory.Database.Command.Name && level == LogLevel.Information).AddConsole();
        });

        var configuration = builder.Configuration;
        builder.Services.AddDbContext<INotesDbContext, NotesDbContext>(x =>
        {
            x.UseSqlServer(configuration.GetConnectionString("Connection"));
        });
        // Add services to the container.
        // builder.Services.AddSingleton<TokenFactory>();
        builder.Services.AddControllers();
        // Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
        builder.Services.AddEndpointsApiExplorer();
        builder.Services.AddSwaggerGen();

        builder.Services.AddSwaggerGen(c =>
        {
            c.SwaggerDoc("v1", new OpenApiInfo { Title = "Your API Name", Version = "v1" });

            // Use the custom header
            c.OperationFilter<SessionTokenHeaderFilter>();
        });



        var app = builder.Build();

        // Configure the HTTP request pipeline.
        if (app.Environment.IsDevelopment())
        {
            app.UseSwagger();
            app.UseSwaggerUI();
        }


        app.UseHttpsRedirection();

        app.UseAuthorization();


        app.MapControllers();

        app.Run();
    }
}
